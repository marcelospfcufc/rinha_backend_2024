version: "3.8"

services:
  api01: &api
    # Lembre-se de que seu serviço HTTP deve estar hospedado num repositório
    # publicamente acessível! Ex.: hub.docker.com
    image: marcelospfcufc/rinha-backend-2024:v1
    hostname: api01
    environment:
      - DB_URI=postgres://postgres:postgres@db:5432/rinha_db?sslmode=disable
    restart: always
    tty: true
    #command: ["/api/main"]    
    # Não é necessário expor qualquer porta além da porta do load balancer,
    # mas é comum as pessoas o fazerem para testarem suas APIs e conectarem
    # ao banco de dados na fase de desenvolvimento.
    ports:
      - "8081:8080"
    depends_on:
      - db_postgres
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "200MB"

  #api02:
  #  # Essa sintaxe reusa o que foi declarado em 'api01'.
  #  <<: *api 
  #  hostname: api02
  #  environment:
  #    - DB_HOSTNAME=db
  #  ports:
  #    - "8082:8080"
 
  #nginx:
  #  image: nginx:latest
  #  volumes:
  #    - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #  depends_on:
  #    - api01
  #    - api02
  #  ports:
  #     # Obrigatório expor/usar a porta 9999 no load balancer!
  #    - "9999:9999" 
  #  deploy:
  #    resources:
  #      limits:
  #        cpus: "0.17"
  #        memory: "10MB"

  db_postgres:
    image: postgres:latest
    hostname: db_postgres    
    environment:
      - POSTGRES_DB=rinha_db            
      - POSTGRES_PASSWORD=qpalzm
    ports:
      - "55432:5432"
    volumes:
    - ./configurations/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "250MB"

  db_mysql:
    image: mysql:8.0.36-debian
    container_name: mysql_rinha
    hostname: db_mysql    
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=qpalzm1234
      - MYSQL_DATABASE=rinha_db
      - MYSQL_USER=rinha
      - MYSQL_PASSWORD=qpalzm
      - HOSTNAME=db_mysql_hostname
    ports:
      - 3306:3306   
    #volumes:
    #  - ./script.sql:/docker-entrypoint-initdb.d/script.sql
    deploy:
      resources:
        limits:
          # Note que a soma de todos os limites dos serviços
          # aqui declarados é de 1.5 unidades de CPU e 550MB
          # de memória. A distribuição feita aqui é apenas
          # um exemplo – distribua como quiser.
          cpus: "1"
          memory: "440MB"  

# O uso do modo `bridge` deve ser adequado à carga que será usada no teste.
# A edição anterior se beneficiou do modo host pois o volume de requisições
# era relativamente alto e a virtualização da rede se tornou um gargalo, mas
# este modo é mais complexo de ser configurado. Fique à vontade para usar o
# modo que quiser desde que não conflite com portas trivialmente usadas em um
# SO.
networks:
  default:
    driver: bridge
    name: rinha-nginx-2024q1